# -*- coding: utf-8 -*-
"""ML session 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NUuRtSYWVyY5yDl1HMp0HzbCUGEvAufT
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error , mean_absolute_error , r2_score

df = pd.read_csv("/content/Salary_Data.csv")
df.head()

df.info()

df.describe().T

df.isna().sum()

df.columns

sns.pairplot(df)
plt.xlabel("years of experience")
plt.ylabel("salary")
plt.show()

# x = df["YearsExperience"]
# y = df["Salary"]

x = df.iloc[: , 0:1]
y = df.iloc[: , 1:]

X_train , X_test , y_train , y_test = train_test_split(x , y , test_size = .3 )

LM = LinearRegression()
LM.fit(X_train , y_train)

y_predict = LM.predict(X_test)

"""#Evaluation"""

MSE = mean_squared_error(y_test , y_predict)
MAE = mean_absolute_error(y_test , y_predict)
R2s = r2_score(y_test , y_predict)
RMSE = np.sqrt(MSE)

print("mean_squared_error: ", MSE)
print("mean_absolute_error: ", MAE)
print("r2_score: ", R2s)
print("root_mean_square_error: ", RMSE)

#B
LM.intercept_

#m
LM.coef_

def calc_sal(exp):
  return LM.intercept_ + LM.coef_*exp

calc_sal(4.5)

